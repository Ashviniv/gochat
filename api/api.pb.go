// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Handle
	Message
	ChatRequest
	ChatResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Handle struct {
	Name      string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Port      int32                      `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Handle) Reset()                    { *m = Handle{} }
func (m *Handle) String() string            { return proto.CompactTextString(m) }
func (*Handle) ProtoMessage()               {}
func (*Handle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Handle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Handle) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Handle) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Message struct {
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Text      string                     `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type ChatRequest struct {
	From *Handle  `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	Chat *Message `protobuf:"bytes,2,opt,name=chat" json:"chat,omitempty"`
}

func (m *ChatRequest) Reset()                    { *m = ChatRequest{} }
func (m *ChatRequest) String() string            { return proto.CompactTextString(m) }
func (*ChatRequest) ProtoMessage()               {}
func (*ChatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChatRequest) GetFrom() *Handle {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ChatRequest) GetChat() *Message {
	if m != nil {
		return m.Chat
	}
	return nil
}

type ChatResponse struct {
	NotFound bool `protobuf:"varint,1,opt,name=not_found,json=notFound" json:"not_found,omitempty"`
}

func (m *ChatResponse) Reset()                    { *m = ChatResponse{} }
func (m *ChatResponse) String() string            { return proto.CompactTextString(m) }
func (*ChatResponse) ProtoMessage()               {}
func (*ChatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ChatResponse) GetNotFound() bool {
	if m != nil {
		return m.NotFound
	}
	return false
}

func init() {
	proto.RegisterType((*Handle)(nil), "api.Handle")
	proto.RegisterType((*Message)(nil), "api.Message")
	proto.RegisterType((*ChatRequest)(nil), "api.ChatRequest")
	proto.RegisterType((*ChatResponse)(nil), "api.ChatResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoChat service

type GoChatClient interface {
	Chat(ctx context.Context, in *ChatRequest, opts ...grpc.CallOption) (*ChatResponse, error)
}

type goChatClient struct {
	cc *grpc.ClientConn
}

func NewGoChatClient(cc *grpc.ClientConn) GoChatClient {
	return &goChatClient{cc}
}

func (c *goChatClient) Chat(ctx context.Context, in *ChatRequest, opts ...grpc.CallOption) (*ChatResponse, error) {
	out := new(ChatResponse)
	err := grpc.Invoke(ctx, "/api.GoChat/Chat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoChat service

type GoChatServer interface {
	Chat(context.Context, *ChatRequest) (*ChatResponse, error)
}

func RegisterGoChatServer(s *grpc.Server, srv GoChatServer) {
	s.RegisterService(&_GoChat_serviceDesc, srv)
}

func _GoChat_Chat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoChatServer).Chat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoChat/Chat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoChatServer).Chat(ctx, req.(*ChatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoChat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GoChat",
	HandlerType: (*GoChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Chat",
			Handler:    _GoChat_Chat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x8d, 0x8d, 0xb1, 0x99, 0xf4, 0xa0, 0x7b, 0x0a, 0xf1, 0xd0, 0x90, 0x53, 0x40, 0x4c,
	0x21, 0x1e, 0xc4, 0xa3, 0x08, 0xea, 0x45, 0x90, 0xc5, 0x83, 0xb7, 0xb2, 0x6d, 0x26, 0x69, 0xb0,
	0xd9, 0x5d, 0xb3, 0x13, 0xf0, 0xe7, 0x4b, 0x76, 0x53, 0x28, 0xde, 0x7a, 0xca, 0xe4, 0xcd, 0xe3,
	0x7b, 0x6f, 0x16, 0x42, 0xa1, 0xdb, 0x42, 0xf7, 0x8a, 0x14, 0x9b, 0x09, 0xdd, 0x26, 0xcb, 0x46,
	0xa9, 0x66, 0x8f, 0x2b, 0x2b, 0x6d, 0x86, 0x7a, 0x45, 0x6d, 0x87, 0x86, 0x44, 0xa7, 0x9d, 0x2b,
	0xfb, 0x86, 0xe0, 0x4d, 0xc8, 0x6a, 0x8f, 0x8c, 0x81, 0x2f, 0x45, 0x87, 0xb1, 0x97, 0x7a, 0x79,
	0xc8, 0xed, 0x3c, 0x6a, 0x5a, 0xf5, 0x14, 0x9f, 0xa7, 0x5e, 0x7e, 0xc1, 0xed, 0xcc, 0x1e, 0x01,
	0xb6, 0x3d, 0x0a, 0xc2, 0x6a, 0x2d, 0x28, 0x9e, 0xa5, 0x5e, 0x1e, 0x95, 0x49, 0xe1, 0x72, 0x8a,
	0x43, 0x4e, 0xf1, 0x79, 0xc8, 0xe1, 0xe1, 0xe4, 0x7e, 0xa2, 0xec, 0x0b, 0x2e, 0xdf, 0xd1, 0x18,
	0xd1, 0xe0, 0x3f, 0x8a, 0x77, 0x02, 0x65, 0x2c, 0x45, 0xf8, 0xeb, 0x4a, 0x85, 0xdc, 0xce, 0xd9,
	0x07, 0x44, 0xcf, 0x3b, 0x41, 0x1c, 0x7f, 0x06, 0x34, 0xc4, 0x96, 0xe0, 0xd7, 0xbd, 0xea, 0x26,
	0x6e, 0x54, 0x8c, 0xaf, 0xe2, 0xce, 0xe4, 0x76, 0xc1, 0x52, 0xf0, 0xb7, 0x3b, 0xe1, 0x18, 0x51,
	0xb9, 0xb0, 0x86, 0xa9, 0x1a, 0xb7, 0x9b, 0xec, 0x16, 0x16, 0x8e, 0x68, 0xb4, 0x92, 0x06, 0xd9,
	0x0d, 0x84, 0x52, 0xd1, 0xba, 0x56, 0x83, 0xac, 0x2c, 0x77, 0xce, 0xe7, 0x52, 0xd1, 0xcb, 0xf8,
	0x5f, 0x3e, 0x40, 0xf0, 0xaa, 0x46, 0x3b, 0xbb, 0x03, 0xdf, 0x7e, 0xaf, 0x2c, 0xf2, 0xa8, 0x53,
	0x72, 0x7d, 0xa4, 0x38, 0x66, 0x76, 0xb6, 0x09, 0xec, 0xa9, 0xf7, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x45, 0xd5, 0xae, 0x16, 0xb8, 0x01, 0x00, 0x00,
}
